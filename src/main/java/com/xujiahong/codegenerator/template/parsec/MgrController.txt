package 【PARSEC_CONTROLLER_PACKAGE】.mgr;

import com.github.pagehelper.PageHelper;
import 【PARSEC_ENTITY_PACKAGE】.【PARSEC_OBJECT_NAME】;
import 【PARSEC_MAPPER_PACKAGE】.【PARSEC_OBJECT_NAME】Mapper;
import com.parsec.universal.exception.BadRequestException;
import com.parsec.universal.page.CommonPageInfo;
import com.parsec.universal.page.PageParam;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import springfox.documentation.annotations.ApiIgnore;

import java.util.List;

@Api(value = "【PARSEC_OBJECT_CH_NAME】控制器", tags = {"MGR/【PARSEC_OBJECT_CH_NAME】"})
@RestController
public class 【PARSEC_OBJECT_NAME】MgrController {

    @Autowired
    【PARSEC_OBJECT_NAME】Mapper 【PARSEC_LOWER_OBJECT_NAME】Mapper;

    @ApiIgnore
    @ApiOperation(value = "保存【PARSEC_OBJECT_CH_NAME】", notes = "标准保存接口（根据id字段新增或修改）")
    @PostMapping("/mgr/【PARSEC_LOWER_OBJECT_NAME】")
    public 【PARSEC_OBJECT_NAME】 save【PARSEC_OBJECT_NAME】(@RequestBody 【PARSEC_OBJECT_NAME】 【PARSEC_LOWER_OBJECT_NAME】) {
        if (【PARSEC_LOWER_OBJECT_NAME】.getId() == null) {
            //新增
            【PARSEC_LOWER_OBJECT_NAME】Mapper.insertSelective(【PARSEC_LOWER_OBJECT_NAME】);
        } else {
            //修改
            【PARSEC_LOWER_OBJECT_NAME】Mapper.updateByPrimaryKeySelective(【PARSEC_LOWER_OBJECT_NAME】);
        }
        return 【PARSEC_LOWER_OBJECT_NAME】;
    }

    @ApiIgnore
    @ApiOperation(value = "删除【PARSEC_OBJECT_CH_NAME】", notes = "标准删除接口")
    @ApiImplicitParam(name = "id", value = "【PARSEC_OBJECT_CH_NAME】ID", required = true, dataType = "Integer", paramType = "path")
    @DeleteMapping("/mgr/【PARSEC_LOWER_OBJECT_NAME】/{id}")
    public void delete【PARSEC_OBJECT_NAME】(@PathVariable Integer id) {
        throw new BadRequestException("接口开发中");
    }

    @ApiIgnore
    @ApiOperation(value = "查询【PARSEC_OBJECT_CH_NAME】列表", notes = "标准分页列表接口")
    @GetMapping("/mgr/【PARSEC_LOWER_OBJECT_NAME】")
    public CommonPageInfo<【PARSEC_OBJECT_NAME】> list【PARSEC_OBJECT_NAME】(PageParam pageParam) {
        PageHelper.startPage(pageParam.getPage(), pageParam.getLimit());
        List<【PARSEC_OBJECT_NAME】> list = 【PARSEC_LOWER_OBJECT_NAME】Mapper.selectAll();
        return new CommonPageInfo<>(list);
    }

    @ApiIgnore
    @ApiOperation(value = "查询【PARSEC_OBJECT_CH_NAME】详情", notes = "标准详情接口")
    @ApiImplicitParam(name = "id", value = "【PARSEC_OBJECT_CH_NAME】ID", required = true, dataType = "Integer", paramType = "path")
    @GetMapping("/mgr/【PARSEC_LOWER_OBJECT_NAME】/{id}")
    public 【PARSEC_OBJECT_NAME】 detail【PARSEC_OBJECT_NAME】(@PathVariable Integer id) {
        【PARSEC_OBJECT_NAME】 db【PARSEC_OBJECT_NAME】 = 【PARSEC_LOWER_OBJECT_NAME】Mapper.selectByPrimaryKey(id);
        return db【PARSEC_OBJECT_NAME】;
    }
}
